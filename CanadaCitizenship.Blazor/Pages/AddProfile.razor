@inject IStringLocalizer<AddProfile> Loc

<RadzenStack>
    <RadzenTemplateForm TItem="AddProfileModel" Data="Model" Submit="CreateProfile">
        <RadzenColumn>
            <RadzenFormField class="w-100" Text="@Loc["ProfileNameFieldText"]" Variant="Variant.Filled">
                <RadzenTextBox Name="ProfileName" @bind-Value="@Model.Name" />
            </RadzenFormField>
            <RadzenRequiredValidator Component="ProfileName" Text="@Loc["ProfileNameRequiredText"]" />
            <RadzenCustomValidator Component="ProfileName" Validator="SameProfileNameValidator" Text="@Loc["ProfileNameUniqueValidatorText"]" />
        </RadzenColumn>
        <RadzenButton class="float-end mt-1" ButtonType="ButtonType.Submit">@Loc["CreateBtn"]</RadzenButton>
    </RadzenTemplateForm>
</RadzenStack>

@code {
    class AddProfileModel
    {
        public string? Name { get; set; }
    }

    [Parameter]
    public IReadOnlyCollection<Profile> Profiles { get; set; } = null!;

    [Inject]
    protected DialogService DialogService { get; set; } = null!;
    [Inject]
    protected NotificationService NotificationService { get; set; } = null!;

    AddProfileModel Model { get; } = new AddProfileModel();

    public bool SameProfileNameValidator() => !Profiles.Any(p => p.Name == Model.Name);

    public void CreateProfile()
    {
        if (!string.IsNullOrEmpty(Model.Name))
        {
            Profile newProfile = new Profile(Model.Name);
            DialogService.Close(newProfile);
        }
    }
}